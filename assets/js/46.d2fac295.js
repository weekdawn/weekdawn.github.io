(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{652:function(s,a,n){"use strict";n.r(a);var t=n(7),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"变量交换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变量交换"}},[s._v("#")]),s._v(" 变量交换")]),s._v(" "),n("h3",{attrs:{id:"pythonic写法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pythonic写法"}},[s._v("#")]),s._v(" pythonic写法：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("a, b = b, a\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"普通写法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#普通写法"}},[s._v("#")]),s._v(" 普通写法：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("tmp = a;\na = b;\nb = tmp;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"循环遍历区间元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#循环遍历区间元素"}},[s._v("#")]),s._v(" 循环遍历区间元素")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 生成器与列表更加节省内存\n# range(start, end, step)\n# [start, end) 包含开头不包含结尾\nfor i in range(1, 1000, 2) # python3\nfor i in range(6) # python3\nfor i in xrange(6) #python2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("blockquote"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("在Python2中，有range和xrange2种写法，xrange是生成器写法，更节省内存。\nPython3中的range等价于Python2中的xrange。\n\n生成器，只有在使用时才会动态生成，而且只能使用1次，比如range(1000000)，\nPython2中会在内存中生成1百万个元素的列表，而在Python3不会生成列表，而是生成，\n占用很小的内存。\n\n如果你还在使用Python2，建议用xrange代替range\n")])])]),n("h2",{attrs:{id:"索引"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[s._v("#")]),s._v(" 索引")]),s._v(" "),n("h3",{attrs:{id:"pythonic写法-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pythonic写法-2"}},[s._v("#")]),s._v(" Pythonic写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("num_list = [1, 4, 9]\nfor i, val in enumerate(num_list):\n    print(i, '--\x3e', val)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"普通写法-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#普通写法-2"}},[s._v("#")]),s._v(" 普通写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("num_list = [1, 4, 9]\nfor i in range(len(num_list))\n    print(i, '--\x3e', num_list[i])\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("blockquote",[n("p",[s._v("显然，Pythonic写法更加直观，优雅。")])]),s._v(" "),n("h2",{attrs:{id:"字符串拼接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符串拼接"}},[s._v("#")]),s._v(" 字符串拼接")]),s._v(" "),n("h3",{attrs:{id:"pythonic写法-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pythonic写法-3"}},[s._v("#")]),s._v(" Pythonic写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("names = ['Tom', 'Jack', 'Sam']\n','.join(names)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"普通写法-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#普通写法-3"}},[s._v("#")]),s._v(" 普通写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("names = 'Tom' + 'Jack' + 'Sam'\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("blockquote",[n("p",[s._v("每次+操作都会产生新字符串，造成内存浪费，而join，整个过程中只会产生一个字符串对象")])]),s._v(" "),n("h2",{attrs:{id:"文件打开与关闭"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文件打开与关闭"}},[s._v("#")]),s._v(" 文件打开与关闭")]),s._v(" "),n("h3",{attrs:{id:"pythonic写法-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pythonic写法-4"}},[s._v("#")]),s._v(" Pythonic写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("with open('a.txt') as f:\n    data = f.read()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"普通写法-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#普通写法-4"}},[s._v("#")]),s._v(" 普通写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("f = open('a.txt')\ntry:\n    data = f.read()\nfinally:\n    f.close()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("blockquote",[n("p",[s._v("使用with，Python将自动管理文件流的打开与关闭，无需手动操作。")])]),s._v(" "),n("h2",{attrs:{id:"解构赋值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值"}},[s._v("#")]),s._v(" 解构赋值")]),s._v(" "),n("h3",{attrs:{id:"pythonic写法-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pythonic写法-5"}},[s._v("#")]),s._v(" Pythonic写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("student = ['Tom', 18, 'male']\nname, age, gender = student\nprint(name, age, gender)\n# Tom 18 male\n\nnum_list = [100, 19, 20, 98]\nfirst, *left_num_list, last = num_list\nprint(first, left_num_list, last)\n# 100 [19, 20] 98\n\nstudent = [['Tom', (98, 96, 100)], ['Jack', (98, 96, 100)]]\n\nfor name, (first, second, third) in student:\n    print(name, first, second, third)\n\nstudent = {\n    'name': 'Tom',\n    'age': 18\n}\n\n# python3\nfor k, v in student.items():\n    print('k', '--\x3e', v)\n\n# python2\nfor k, v in student.iteritems():\n    print('k', '--\x3e', v)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("blockquote",[n("p",[s._v("字典也类似，在Python2中，字典的items方法将返回列表，当字典比较大时，这样会很耗内存。而iteritems方法返回的是生成器。\nPython3中，没有iteritems，items等价于Python2的iteritems。\n如果在使用Python2，请用iteritems代替items")])]),s._v(" "),n("h2",{attrs:{id:"推导式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#推导式"}},[s._v("#")]),s._v(" 推导式")]),s._v(" "),n("h3",{attrs:{id:"pythonic写法-6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pythonic写法-6"}},[s._v("#")]),s._v(" Pythonic写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 生成1-100的奇数\nodd = [i for i in range(1, 100) if i % 2 == 1]\n\n# 集合a，b分别去一个数，找出和大于100的所有组合\nresult = [(x, y) for x in a_set for y in b_set if x + y > 100]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"普通写法-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#普通写法-5"}},[s._v("#")]),s._v(" 普通写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 生成1-100的奇数\nresult = []\nfor i in range(100):\n    if i % 2 == 1:\n        result.append(i)\n        \n# 集合a，b分别去一个数，找出和大于100的所有组合\nresult = []\nfor x in a_set:\n    for y in b_set:\n        if x + y > 100:\n        result.append((x, y))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h2",{attrs:{id:"链式比较"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#链式比较"}},[s._v("#")]),s._v(" 链式比较")]),s._v(" "),n("h3",{attrs:{id:"pythonic写法-7"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pythonic写法-7"}},[s._v("#")]),s._v(" Pythonic写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("a = 3\nb = 1 \n1 <= b <= a < 10\n# True  \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"普通写法-6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#普通写法-6"}},[s._v("#")]),s._v(" 普通写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("b >= 1 and b <= a and a < 10 \n# True\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"字符串反转"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符串反转"}},[s._v("#")]),s._v(" 字符串反转")]),s._v(" "),n("h3",{attrs:{id:"pythonic写法-8"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pythonic写法-8"}},[s._v("#")]),s._v(" pythonic写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def reverse_str( s ):\n    return s[::-1] \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"列表求和-最大值-最小值-乘积"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#列表求和-最大值-最小值-乘积"}},[s._v("#")]),s._v(" 列表求和，最大值，最小值，乘积")]),s._v(" "),n("h3",{attrs:{id:"pythonic写法-9"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pythonic写法-9"}},[s._v("#")]),s._v(" Pythonic写法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("numList = [1,2,3,4,5]   \n\nsum = sum(numList)  #sum = 15\nmaxNum = max(numList) #maxNum = 5\nminNum = min(numList) #minNum = 1\nfrom operator import mul\nprod = reduce(mul, numList, 1) #prod = 120 默认值传1以防空列表报错\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"三元符的替代"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三元符的替代"}},[s._v("#")]),s._v(" 三元符的替代")]),s._v(" "),n("h3",{attrs:{id:"p"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#p"}},[s._v("#")]),s._v(" P:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("a = 3   \n\nb = 2 if a > 2 else 1\n# b = 2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"np"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#np"}},[s._v("#")]),s._v(" NP:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("if a > 2:\n    b = 2\nelse:\n    b = 1\n# b = 2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"使用zip创建键值对"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用zip创建键值对"}},[s._v("#")]),s._v(" 使用zip创建键值对")]),s._v(" "),n("h3",{attrs:{id:"p-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#p-2"}},[s._v("#")]),s._v(" P:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("keys = ['Name', 'Sex', 'Age']\nvalues = ['Tim', 'Male', 23]\n\ndic = dict(zip(keys, values))\n# {'Age': 23, 'Name': 'Tim', 'Sex': 'Male'}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"np-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#np-2"}},[s._v("#")]),s._v(" NP:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("dic = {}\nfor i,e in enumerate(keys):\n    dic[e] = values[i]\n# {'Age': 23, 'Name': 'Tim', 'Sex': 'Male'}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);