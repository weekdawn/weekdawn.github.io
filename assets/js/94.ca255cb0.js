(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{704:function(a,e,s){"use strict";s.r(e);var t=s(7),r=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"设置docker开机启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置docker开机启动"}},[a._v("#")]),a._v(" 设置docker开机启动")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("systemctl enable docker\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h2",{attrs:{id:"设置容器自动重启"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置容器自动重启"}},[a._v("#")]),a._v(" 设置容器自动重启")]),a._v(" "),s("h3",{attrs:{id:"_1-若容器不存在-使用run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-若容器不存在-使用run"}},[a._v("#")]),a._v(" 1. 若容器不存在，使用run：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("docker run -d --restart=always --name 容器名 镜像\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-若容器已经存在时-使用update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-若容器已经存在时-使用update"}},[a._v("#")]),a._v(" 2. 若容器已经存在时，使用update：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("docker update --restart=always 容器ID\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h1",{attrs:{id:"docker-容器的重启策略如下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-容器的重启策略如下"}},[a._v("#")]),a._v(" Docker 容器的重启策略如下：")]),a._v(" "),s("p",[a._v("--restart具体参数值详细信息：\nno　　　　　　　 // 默认策略,容器退出时不重启容器；\non-failure　　  // 在容器非正常退出时（退出状态非0）才重新启动容器；\non-failure:3    // 在容器非正常退出时重启容器，最多重启3次；\nalways　　　　  // 无论退出状态是如何，都重启容器；\nunless-stopped  // 在容器退出时总是重启容器，但是不考虑在 Docker 守护进程启动时就已经停止了的容器。")])])}),[],!1,null,null,null);e.default=r.exports}}]);