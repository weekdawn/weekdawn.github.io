(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{673:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("p",[s._v("有时候我们需要周期性的执行一些脚本，有时候需要在有必要的时候通过触发执行一些脚本。我们有点追求，需要知道任务执行的时间，执行的状态，执行的日志。这么一整套其实是个挺复杂的需求，那么有没有现成的，优雅的解决方案呢？答案是有！那就是 Github Actions！")]),s._v(" "),a("h2",{attrs:{id:"为什么不是-crontab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么不是-crontab"}},[s._v("#")]),s._v(" 为什么不是 crontab")]),s._v(" "),a("ul",[a("li",[s._v("需要有自己的服务器（这对于开发人员都是基础设施，应该人人都有，可是这里面真正的成本是迁移成本）")]),s._v(" "),a("li",[s._v("执行状态，日志需要进入服务器才能查看")]),s._v(" "),a("li",[s._v("修改比较麻烦")])]),s._v(" "),a("h2",{attrs:{id:"github-actions-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-actions-是什么"}},[s._v("#")]),s._v(" Github Actions 是什么")]),s._v(" "),a("p",[s._v("Github Actions 是一个基于 GitHub 事件的 CI/CD pipeline，在微软收购 GitHub 之前，大家基本都是用的 CircleCI 或者 TravisCI 之类的，收购之后，由于微软自家平台本来就有 Azure pipeline 服务，所以就诞生了 Github Actions，其实相当于 Azure pipeline 的定制版本。")]),s._v(" "),a("p",[s._v("Github Actions 有什么相比别的有什么亮点呢？其实最大的亮点就是支持 Schedule 任务，也就是你可以通过 crontab 的方式执行任务。")]),s._v(" "),a("h2",{attrs:{id:"如何使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用"}},[s._v("#")]),s._v(" 如何使用")]),s._v(" "),a("h3",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),a("p",[s._v("最核心的一点，其实就是在你的项目里面建一个 .github/workflows 文件夹，然后在里面新建一个（也支持多个） {name}.yml 文件作为配置文件。")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cron.yml")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Cron CI\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("schedule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cron")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0 * * * *'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 触发配置，每小时执行一次")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("latest "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 选择执行环境")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" test "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行相应指令")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" echo done"),a("span",{pre:!0,attrs:{class:"token tag"}},[s._v("!")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("这个运行环境其实里面预装了好多基础软件和工具，基本的 node，python，golang 等都已经装好了, 可以在 这里 查看。")]),s._v(" "),a("p",[s._v("可以选择使用自己熟悉的高级语言来写脚本，这样每次执行之前，我们需要把自己的 repo checkout 下来，所以需要加一点配置：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" actions/checkout@v1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# checkout 代码")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" run script "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行脚本")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" node test.js\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#...")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("注意：由于执行器启动需要时间，所以只能保证在配置的时间点，执行器开始启动，而不是开始执行脚本。")]),s._v(" "),a("h2",{attrs:{id:"安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[s._v("#")]),s._v(" 安全")]),s._v(" "),a("p",[s._v("执行脚本可能需要一些敏感的配置，Github Actions 支持配置 secrets，具体文档在 这里。")]),s._v(" "),a("h2",{attrs:{id:"进阶操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进阶操作"}},[s._v("#")]),s._v(" 进阶操作")]),s._v(" "),a("p",[s._v("如果需要在不同时候触发不同脚本，难道我们需要创建多个 repo ?")]),s._v(" "),a("p",[s._v("不，我们不需要，这样太过愚蠢。")]),s._v(" "),a("p",[s._v("其实我们可以读取本次触发的事件信息，GITHUB_EVENT_PATH 这个环境变量就是文件路径，例如：/github/workflow/event.json，这里面可以拿到更多东西。")]),s._v(" "),a("p",[s._v("例如，可以拿到提交信息之类的有用信息，接着就可以发挥了，比如在提交信息中配置关键字，通过不同关键字，执行不同脚本。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('...\n"id": "3ab970e8b88b70f344e99e546f79a11252fc5e625",\n"message": "test",\n"modified": [\n  ".github/workflows/schedule.yml"\n],\n...\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("这样我们就拥有了一个免费的，功能齐全的 Task Runner。")])])}),[],!1,null,null,null);t.default=e.exports}}]);