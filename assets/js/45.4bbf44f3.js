(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{651:function(t,s,e){"use strict";e.r(s);var i=e(7),n=Object(i.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[t._v("最近开始学习前端，新建了一个前端项目，打算从项目初期就把项目的地基打好，定义好这个项目的编码和工程规范，原本的方案是分别部署 Eslint + Prettier + Husky + Commitlint+ Lint-staged。这一套方案如果挨个部署要写好多配置文件，挺耗费精力的，后来我发现了阿里巴巴有一个「阿里巴巴前端规约」项目，项目主要包括「规约文档」和「配套工具」两部分，目前只开放了「配套工具」部分，可以使用 F2ELint 等配套工具实现项目规范。\n项目是去年才开始的，知道的人还不多，每周的下载量也就几百。")]),t._v(" "),e("h2",{attrs:{id:"f2elint-安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f2elint-安装"}},[t._v("#")]),t._v(" f2elint 安装")]),t._v(" "),e("p",[t._v("首先需要初始化项目，生成 package.json 文件：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm init\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("定义好项目相关信息后，安装 f2elint")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install f2elint -g\n# 或使用淘宝镜像\nnpm install f2elint -g --registry=http://registry.npm.taobao.org\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("安装过程会叫你选择这个项目相关语言、框架、lint 信息，我的项目目前没使用 Vue 等框架，同时也不需要 MarkdownLint，所以就选了 styleLint 和 Prettier 格式化代码（Eslint 和 Commitlint 是默认的）。大家可根据自己的项目实际情况进行选择。\n"),e("img",{attrs:{src:"https://img.picgo.net/2022/07/27/9ea6d5228c1440b8aee9aea5445c925a.png",alt:""}})]),t._v(" "),e("p",[t._v("安装完成后，可执行 f2elint -h 以验证安装成功。\n在项目根目录执行 f2elint init，即可一键接入规约，为项目安装规约 Lint 所需的依赖和配置。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("f2elint init\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("f2elint 写入了各种配置文件，具体内容如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("文件名")]),t._v(" "),e("th",[t._v("功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v(".eslintrc.js、.eslintignore")]),t._v(" "),e("td",[t._v("ESLint 配置（继承 eslint-config-ali）及黑名单文件")])]),t._v(" "),e("tr",[e("td",[t._v(".stylelintrc.js、.stylelintignore")]),t._v(" "),e("td",[t._v("stylelint 配置（继承 stylelint-config-ali）及黑名单文件")])]),t._v(" "),e("tr",[e("td",[t._v("commitlint.config.js")]),t._v(" "),e("td",[t._v("commitlint 配置（继承 commitlint-config-ali）")])]),t._v(" "),e("tr",[e("td",[t._v(".markdownlint.json、.markdownlintignore")]),t._v(" "),e("td",[t._v("markdownlint 配置及黑名单文件")])]),t._v(" "),e("tr",[e("td",[t._v(".prettierrc.js")]),t._v(" "),e("td",[t._v("符合规约的 Prettier 配置")])]),t._v(" "),e("tr",[e("td",[t._v(".editorconfig")]),t._v(" "),e("td",[t._v("符合规约的 editorconfig")])]),t._v(" "),e("tr",[e("td",[t._v(".vscode/extensions.json")]),t._v(" "),e("td",[t._v("写入规约相关的 VSCode 插件推荐，包括 ESLint、stylelint、markdownlint、prettier 等")])]),t._v(" "),e("tr",[e("td",[t._v(".vscode/settings.json")]),t._v(" "),e("td",[t._v("写入规约相关的 VSCode 设置，设置 ESLint 和 stylelint 插件的 validate 及保存时自动运行 fix，如果选择使用 Prettier，会同时将 prettier-vscode 插件设置为各前端语言的 defaultFormatter，并配置保存时自动格式化")])])])]),t._v(" "),e("p",[t._v("同时f2elint配置了 git commit 卡口，在 git commit 时会运行 f2elint commit-file-scan 和 f2elint commit-msg-scan 分别对提交文件和提交信息进行规约检查。")]),t._v(" "),e("h2",{attrs:{id:"vscode安装eslint、stylelint、prettierrc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vscode安装eslint、stylelint、prettierrc"}},[t._v("#")]),t._v(" vscode安装eslint、stylelint、prettierrc")]),t._v(" "),e("p",[t._v("在vscode中安装eslint、styleint和prettierrc三个插件。")]),t._v(" "),e("p",[t._v("安装好后无需配置，插件会自动找到项目中的.eslintrc.js、.stylelintrc.js、.prettierrc.js等配置文件，到此为止，就可以正常使用阿里的前端命名规范自己的项目了。")]),t._v(" "),e("h2",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" git")]),t._v(" "),e("p",[t._v("初始化git本地仓库，提交代码并连上github。（github上必须要先创建一个仓库）")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('git init\ngit add .\ngit commit -m "xxxxx"\ngit remote add origin https://github.com/XXXXX/projectname.git\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("同时，我创建了一个.gitignore文件，将不需要上传到仓库上的配置文件写了进去，具体内容如下：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".vscode/\nnode_modules/\n.editorconfig\n.eslintignore\n.eslintrc.js\n.prettierrc.js\n.stylelintignore\n.stylelintrc.js\ncommitlint.config.js\nf2elint.config.js\npackage.json\npackage-lock.json\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("p",[t._v("这样仓库中就只存在项目文件。")]),t._v(" "),e("h2",{attrs:{id:"husky安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#husky安装"}},[t._v("#")]),t._v(" husky安装")]),t._v(" "),e("p",[t._v("husky可以让我们向项目中方便添加git hooks。在 git commit 时会运行 f2elint commit-file-scan 和 f2elint commit-msg-scan 分别对提交文件和提交信息进行规约检查。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install husky --save-dev\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("安装好后，如果没有按照规范提交，就会提示提交失败。")]),t._v(" "),e("h2",{attrs:{id:"git-commit-规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-规范"}},[t._v("#")]),t._v(" Git Commit 规范")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<type>(<scope>): <subject>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("type：用于说明 commit 的类别，只允许使用下面8个标识。")]),t._v(" "),e("ol",[e("li",[t._v("feat：新功能（feature）")]),t._v(" "),e("li",[t._v("fix：修补bug")]),t._v(" "),e("li",[t._v("docs：文档（documentation）")]),t._v(" "),e("li",[t._v("style： 格式（不影响代码运行的变动）")]),t._v(" "),e("li",[t._v("refactor：重构（即不是新增功能，也不是修改bug的代码变动）")]),t._v(" "),e("li",[t._v("test：增加测试")]),t._v(" "),e("li",[t._v("chore：构建过程或辅助工具的变动")]),t._v(" "),e("li",[t._v("build: 本地creator构建")])]),t._v(" "),e("p",[t._v("scope：用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。\nsubject是 commit 目的的简短描述，不超过50个字符。")]),t._v(" "),e("ol",[e("li",[t._v("以动词开头，使用第一人称现在时，比如change，而不是changed或changes")]),t._v(" "),e("li",[t._v("第一个字母小写")]),t._v(" "),e("li",[t._v("结尾不加句号（.）")])]),t._v(" "),e("h2",{attrs:{id:"可能遇到的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可能遇到的问题"}},[t._v("#")]),t._v(" 可能遇到的问题")]),t._v(" "),e("p",[t._v("如果在执行f2elint init时，提示：因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。\n这是因为计算机上启动 Windows PowerShell 时，执行策略很可能是 Restricted（默认设置）。 Restricted 执行策略不允许任何脚本运行。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 输入后选y，更改执行策略\nset-executionpolicy remotesigned\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);